{"ast":null,"code":"var _jsxFileName = \"/Users/aroush/338-Lab8/Assignment_1_381_/my-ecommerce-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// Importing necessary modules and components\nimport './App.css';\nimport React, { createContext, useContext, useState } from 'react';\nimport Homepage from './components/Homepage.js';\nimport Productpage from './components/Productpage.js';\nimport Loginpage from './components/LoginPage.js';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n\n// Creating a context for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to access authentication context\nexport const useAuthContext = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Authentication provider component\n_s(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // State to hold authentication status\n  const [authenticated, setAuthenticated] = useState(false);\n  return (\n    /*#__PURE__*/\n    // Providing authentication status to child components\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        authenticated,\n        setAuthenticated\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Main App component\n_s2(AuthProvider, \"zbs8MFqNgUfPgDkZLeejYXFpdoQ=\");\n_c = AuthProvider;\nfunction App() {\n  _s3();\n  // State to track whether user is logged in\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Function to check if user is logged in\n  const checkLoggedIn = () => {\n    return isLoggedIn;\n  };\n  return (\n    /*#__PURE__*/\n    // Wrapping the entire app with AuthProvider to manage authentication state\n    _jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Loginpage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/products\",\n            element: /*#__PURE__*/_jsxDEV(Productpage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s3(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","createContext","useContext","useState","Homepage","Productpage","Loginpage","BrowserRouter","Routes","Route","Navigate","jsxDEV","_jsxDEV","AuthContext","useAuthContext","_s","AuthProvider","children","_s2","authenticated","setAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s3","isLoggedIn","setIsLoggedIn","checkLoggedIn","path","element","_c2","$RefreshReg$"],"sources":["/Users/aroush/338-Lab8/Assignment_1_381_/my-ecommerce-app/src/App.js"],"sourcesContent":["// Importing necessary modules and components\nimport './App.css';\nimport React, { createContext, useContext, useState } from 'react';\nimport Homepage from './components/Homepage.js';\nimport Productpage from './components/Productpage.js';\nimport Loginpage from './components/LoginPage.js';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n\n// Creating a context for authentication\nconst AuthContext = createContext();\n\n// Custom hook to access authentication context\nexport const useAuthContext = () => useContext(AuthContext);\n\n// Authentication provider component\nexport const AuthProvider = ({ children }) => {\n  // State to hold authentication status\n  const [authenticated, setAuthenticated] = useState(false);\n\n  return (\n    // Providing authentication status to child components\n    <AuthContext.Provider value={{ authenticated, setAuthenticated }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Main App component\nfunction App() {\n  // State to track whether user is logged in\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Function to check if user is logged in\n  const checkLoggedIn = () => {\n    return isLoggedIn;\n  };\n\n  return (\n    // Wrapping the entire app with AuthProvider to manage authentication state\n    <AuthProvider>\n      {/* Setting up routing using BrowserRouter */}\n      <BrowserRouter>\n        <Routes>\n          {/* Route for the homepage */}\n          <Route path=\"/\" element={<Homepage />} />\n          {/* Route for the login page */}\n          <Route path=\"/login\" element={<Loginpage />} />\n          {/* Route for the product page */}\n          <Route path=\"/products\" element={<Productpage />} />\n        </Routes>\n      </BrowserRouter>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}